library(readr)
library(tidyverse)
library(ggmap)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(janitor)
library(LearnBayes)

setwd("~/Desktop/Stat 207/")
covid <- read_csv("covid.csv") %>% mutate(County = tolower(County)) %>% clean_names()
covid1 <- covid %>% mutate(infected = floor(0.20*population))
covid2 <- data.frame(y = covid$deaths, n = covid$total_cases)
covid3 <- covid1 %>% mutate(est.infected.20 = ceiling(0.20*population))

states <- map_data("state")
cali <- subset(states, region == "california")
counties <- map_data("county")
ca_county <- subset(counties, region == "california") %>% inner_join(covid, by = c("subregion" = "county")) %>%
  mutate(death.rate = 100*round(deaths/population, 10))

ditch_the_axes <- theme(
  axis.text = element_blank(),
  axis.line = element_blank(),
  axis.ticks = element_blank(),
  panel.border = element_blank(),
  panel.grid = element_blank(),
  axis.title = element_blank()
)

ca_base <- ggplot(data = cali, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")

ca_base + 
  geom_polygon(data = ca_county, aes(fill =ordered(round(100*death.rate, 2))), color = "white") +
  geom_polygon(color = "black", fill = NA) +
  ggtitle("Death Rates by County") +
  theme_bw() +
  labs(fill = "Deaths / Infected (%)") +
  ditch_the_axes

par(mfrow = c(2,1))

ggplot(data = covid1, aes(x=infected, y=deaths, color=population)) + geom_point() + 
  geom_smooth(method="lm") + ggtitle("All California Counties")

ggplot(data = covid1[2:58,], aes(x=infected, y=deaths, color=population)) + geom_point() + 
  geom_smooth(method="lm") + ggtitle("Los Angeles Removed")

ggplot(data = covid1, aes(x = 100*deaths/total_cases, fill = county)) + geom_histogram() + 
  labs(x="Deaths / Total Cases (%)")

set.seed(112358)
n = 1000
post.theta <- rbeta(n = n, shape1 = sum(covid$deaths) + 0.5, 
                    shape2 = sum(covid$total_cases) - sum(covid$deaths) + 0.5)

hist(post.theta)
mean(post.theta)
sd(post.theta)
plot(density(post.theta), main = "Model 1 : Theta Posterior Distribution", col = "blue") # make pretty

est.posterior.deaths <- matrix(NA, nrow = nrow(covid), ncol = n)
row.names(est.posterior.deaths) <- covid$county

for(i in 1:nrow(covid)){
  for(j in 1:n){
    est.posterior.deaths[i,j] = ceiling(0.20*covid1$population[i] * post.theta[j])
  }
}


betabinexch0=function(theta, data) # this computes the log posterior density of the beta-binomial exchangeable model
{
  eta=theta[,1] # this is mu in our model
  K=theta[,2] # this is tau in our model
  y=data[,1] 
  n=data[,2]
  N=length(y)
  val=0*K;
  for (i in 1:N)
    val=val+lbeta(K*eta+y[i],K*(1-eta)+n[i]-y[i])
  val=val-N*lbeta(K*eta,K*(1-eta))
  val=val-2*log(1+K)-log(eta)-log(1-eta)
  return(val)
}

betabinexch=function(theta, data){
  eta = exp(theta[1])/(1 + exp(theta[1]))
  K = exp(theta[2])
  y = data[, 1]
  n = data[, 2]
  N = length(y)
  
  logf=function(y,n,K,eta)
    lbeta(K * eta + y, K * (1 - eta) + n - y)-lbeta(K * eta, K * (1 - eta))
  
  val=sum(logf(y,n,K,eta))
  
  val = val + theta[2] - 2 * log(1 + exp(theta[2]))
  return(val)
}

betabinT=function(theta,datapar){
  data=datapar$data
  tpar=datapar$par
  d=betabinexch(theta,data)-dmt(theta,mean=c(tpar$m),
                                S=tpar$var,df=tpar$df,log=TRUE)
  return(d)
}

fit <- laplace(betabinexch,array(c(-7,6),c(1,2)), data = covid2)
tpar=list(m=fit$mode,var=2*fit$var,df=4)
dataparams=list(data=covid2,par=tpar)

start=array(c(-10,10),c(1,2))
#laplace(betabinT,theta = start, mode = 10, dataparams, method = "Brent", lower = -1000, upper= 100)

start1 <- c(0.25, 0.5)# these need to be initialized?

fit1 <- optim(start, betabinT, control = list(fnscale = -1), hessian = TRUE, datapar = dataparams)

d_max <- betabinT(theta = fit1$par, data = dataparams) # this is the value of d that I think we want

tpar1=list(m=fit1$par,var=2*solve(-1*fit1$hessian), df=4) 
# convert the hessian to a covariance, stack overflow says covar is asymptotically -hessian^-1

rejectsampling=function(logf,tpar,dmax,n,data){
  theta=rmt(n,mean=c(tpar$m),S=tpar$var,df=tpar$df)
  for(i in 1:n){
    lf[i]=logf(theta[i,],data) 
  }# this was lf before
  lg=dmt(theta,mean=c(tpar$m),S=tpar$var,df=tpar$df,log=TRUE)
  prob=exp(lf-lg-dmax)
  return(theta[runif(n)<prob,])
}

n <- 10000

lf <- rep(0,n)
theta3 <- rejectsampling(betabinexch, tpar1, dmax = d_max, n, covid2)
mycontour(betabinexch,c(-4,-3,3,8), covid2, main = "Model 2 : Parameter Rejection Sampling")# change these values as well add axes labels
points(theta3[,1],theta3[,2])

library(rmutil)
library(boot)
a <- inv.logit(theta3[,1])
b <- log(theta3[,2])

post.deaths.3.2 <- matrix(NA, nrow=nrow(covid2), ncol = nrow(theta3))
rownames(post.deaths.3) <- covid$county

for(i in 1:nrow(post.deaths.3)){
  for(j in 1:ncol(post.deaths.3)){
    post.deaths.3.2[i,j] <- ceiling(0.20*covid1$population[i]*(a[j]*b[j])/((1-a[j])*b[j]))
  }
}

post.deaths.3 <- matrix(NA, nrow=nrow(covid2), ncol = nrow(theta3))
rownames(post.deaths.3) <- covid$county

for(i in 1:nrow(post.deaths.3)){
  for(j in 1:ncol(post.deaths.3)){
    post.deaths.3.2[i,j] <- ceiling(0.20*covid1$population[i]*(a[j])/(a[j]+b[j]))
  }
}

plot(density(a/(a+b)), main = "Model 2 : Posterior Distribution mu/(mu+tau)",
     col = "red") # this is the distribution of "theta"

post.theta.3 <- a/(a+b)
post.theta.3.2 <- (a*b)/((1-a)*b)
mean(post.theta.3)
quantile(post.theta.3, probs = c(0.025,0.975))

apply(post.deaths.3, MARGIN = 1, FUN = quantile, probs = c(0.1,0.25,0.5,0.75,0.9)) %>% t()
covid2$n[1]*(a/(a+b)) %>% mean() # expected value

covid2$n[1]*(a*b*(a+b+covid2$n[1]))/((a+b)*(a+b)*(a+b)+1) %>% mean() # variance

library(boot)
log_post_mu_tau <- function(theta, data){
  mu = theta[1]
  tau = theta[2]
  y = data[, 1]
  n = data[, 2]
  N = length(y)
  return(-log(mu*(1-mu)*(1+tau)^2) + sum(lbeta(mu*tau + y, tau*(1-mu) + n - y) - lbeta(mu*tau,tau*(1-mu))))
}

betabinexch5=function(theta, data) # this computes the log posterior density of the beta-binomial exchangeable model
{
  eta = exp(theta[1])/(1 + exp(theta[1]))
  K = exp(theta[2])
  y=data[,1] 
  n=data[,2]
  N=length(y)
  val=0*K;
  for (i in 1:N)
    val=val+lbeta(K*eta+y[i],K*(1-eta)+n[i]-y[i])
  val=val-N*lbeta(K*eta,K*(1-eta))
  val=val-2*log(1+K)-log(eta)-log(1-eta)
  return(val)
}

betabinexch4=function(theta, data){
  eta = exp(theta[1])/(1 + exp(theta[1]))
  K = exp(theta[2])
  mu = theta[1]
  tau = theta[2]
  y = data[, 1]
  n = data[, 2]
  N = length(y)
  
  logf=function(y,n,K,eta)
    lbeta(K * eta + y, K * (1 - eta) + n - y)-lbeta(K * eta, K * (1 - eta))
  
  val= -log(eta*(1-eta)*(1+K)^2) + sum(logf(y,n,K,eta))
  
  val = val + theta[2] - 2 * log(1 + exp(theta[2]))
  return(val)
}

#betabinexch4(j, covid2)
# ok this seems to work
# now need to do rejection sampling to get a sample of mu and tau
# follow the above model

fit4 <- laplace(betabinexch5, array(c(-7,6),c(1,2)), data = covid2)
tpar4=list(m=fit4$mode,var=2*fit4$var,df=4)
dataparams4=list(data=covid2,par=tpar4)

start=array(c(-10,10),c(1,2))
#laplace(betabinT,theta = start, mode = 10, dataparams, method = "Brent", lower = -1000, upper= 100)

fit5 <- optim(start, betabinT, control = list(fnscale = -1), hessian = TRUE, datapar = dataparams4)

d_max4 <- betabinT(theta = fit5$par, data = dataparams4) # this is the value of d that I think we want

tpar4=list(m=fit5$par,var=2*solve(-1*fit5$hessian), df=4) 
# convert the hessian to a covariance, stack overflow says covar is asymptotically -hessian^-1
lf <- c()
rejectsampling=function(logf,tpar,dmax,n,data){
  theta=rmt(n,mean=c(tpar$m),S=tpar$var,df=tpar$df)
  for(i in 1:n){
    lf[i]=logf(theta[i,],data) 
  }# this was lf before
  lg=dmt(theta,mean=c(tpar$m),S=tpar$var,df=tpar$df,log=TRUE)
  prob=exp(lf-lg-dmax)
  return(theta[runif(n)<prob,])
}

n <- 10000

theta4 <- rejectsampling(betabinexch5, tpar4, dmax = d_max4, n, covid2)
mycontour(betabinexch5,c(-4,-3,3,8), covid2, main = "Model 3 : Parameter Rejection Sampling", xlab = "logit(mu)", 
          ylab = "exp(tau)")# change these values as well add axes labels
points(theta4[,1],theta4[,2])
# centered much more
# very good
# now sample the thetas given this sample of 

post.theta.4 <- matrix(NA, nrow = nrow(covid2), ncol = nrow(theta4))

mu.4 <- inv.logit(theta4[,1])
tau.4 <- log(theta4[,2])

for(i in 1:nrow(covid2)){
  for(j in 1:length(tau.4)){
    post.theta.4[i,j] <- rbeta(n = 1, shape1 = inv.logit(theta4[j,1])*log(theta4[j,2]) + covid2$y[i],
                               shape2 = log(theta4[j,2])*(1-inv.logit(theta4[j,1])) + covid2$n[i] - covid2$y[i])
  }
}

post.deaths.4 <- matrix(NA, nrow = nrow(covid2), ncol = length(post.theta.4))

for(i in 1:nrow(covid2)){
  for(j in 1:ncol(post.deaths.4)){
    post.deaths.4[i,j] <- rbinom(n=1, size=ceiling(0.20*covid1$population[i]), prob=post.theta.4[j])
  }
}
rownames(post.deaths.4) <- covid$county
apply(post.deaths.4, MARGIN = 1, FUN = quantile, probs = c(0.1,0.25,0.5,0.75,0.9)) %>% t() %>% View()

est.dead.4 <- matrix(NA, nrow=nrow(covid3), ncol=length(post.theta.4))
rownames(est.dead.4) <- covid1$county

est.dead.3 <- matrix(NA, nrow=nrow(covid3), ncol=length(post.theta.3))
rownames(est.dead.3) <- covid1$county

est.dead.2 <- matrix(NA, nrow=nrow(covid3), ncol=length(post.theta))
rownames(est.dead.2) <- covid1$county

for(i in 1:nrow(est.dead.4)){
  for(j in 1:ncol(est.dead.4)){
    est.dead.4[i,j] = covid3$est.infected.20[i]*post.theta.4[j]
  }
}


for(i in 1:nrow(est.dead.3)){
  for(j in 1:ncol(est.dead.3)){
    est.dead.3[i,j] = covid3$est.infected.20[i]*post.theta.3[j]
  }
}


for(i in 1:nrow(est.dead.2)){
  for(j in 1:ncol(est.dead.2)){
    est.dead.2[i,j] = covid3$est.infected.20[i]*post.theta[j]
  }
}


par(mfrow = c(3,1))
plot(density(apply(est.dead.2, MARGIN = 2, FUN = sum)), main = "Model 1 : Deaths from 20% Infected", col = "blue")
abline(v = 200000, col = "pink")
plot(density(apply(est.dead.3, MARGIN = 2, FUN = sum)), main = "Model 2 : Deaths from 20% Infected", col = "red")
abline(v = 200000, col = "pink")
plot(density(apply(est.dead.4, MARGIN = 2, FUN = sum)), main = "Model 3 : Deaths from 20% Infected", col = "orange")
abline(v = 200000, col = "pink")

par(mfrow = c(2,2))
boxplot(post.deaths.4[1,], post.deaths.4[2,], post.deaths.4[3,], 
        post.deaths.4[4,], post.deaths.4[5,], post.deaths.4[6,], 
        main = "Model 3: Est. Posterior Deaths", horizontal = TRUE, las = 2,
        names = c("LA", "SD", "R.side", "S.Clara", "Orange", "S.Bern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.4[7,], post.deaths.4[8,], post.deaths.4[9,], 
        post.deaths.4[10,], post.deaths.4[11,], post.deaths.4[12,], 
        horizontal = TRUE, las = 2,
        main = "Model 3: Est. Posterior Deaths", 
        names = c("SF", "Ala", "Sac", "S.Mateo", "C.Costa", "Kern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.4[13,], post.deaths.4[14,], post.deaths.4[15,], 
        post.deaths.4[16,], post.deaths.4[17,], post.deaths.4[18,], 
        horizontal = TRUE, las = 2,
        main = "Model 3: Est. Posterior Deaths", 
        names = c("Ventura", "S.Joaq", "SB", "Tulare", "Fresno", "Marin"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.4[19,], post.deaths.4[20,], post.deaths.4[21,], 
        post.deaths.4[22,], post.deaths.4[23,], post.deaths.4[24,], 
        horizontal = TRUE, las = 2,
        main = "Model 3: Est. Posterior Deaths", 
        names = c("Sonoma", "Stan.", "Solano", "Placer", "SLO", "Yolo"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.4[25,], post.deaths.4[26,], post.deaths.4[27,], 
        post.deaths.4[28,], post.deaths.4[29,], post.deaths.4[30,], 
        horizontal = TRUE, las = 2,
        main = "Model 3: Est. Posterior Deaths", 
        names = c("Imp", "SCZ", "Mont", "Merced", "Humboldt", "S.Benito"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.4[31,], post.deaths.4[32,], post.deaths.4[33,], 
        post.deaths.4[34,], post.deaths.4[35,], post.deaths.4[36,], 
        horizontal = TRUE, las = 2,
        main = "Model 3: Est. Posterior Deaths", 
        names = c("Dorado", "Napa", "Nevada", "Madera", "Shasta", "Mono"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))


par(mfrow = c(2,2))
boxplot(post.deaths.3[1,], post.deaths.3[2,], post.deaths.3[3,], 
        post.deaths.3[4,], post.deaths.3[5,], post.deaths.3[6,], 
        main = "Model 2: Est. Posterior Deaths", horizontal = TRUE, las = 2,
        names = c("LA", "SD", "R.side", "S.Clara", "Orange", "S.Bern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.3[7,], post.deaths.3[8,], post.deaths.3[9,], 
        post.deaths.3[10,], post.deaths.3[11,], post.deaths.3[12,], 
        horizontal = TRUE, las = 2,
        main = "Model 2: Est. Posterior Deaths", 
        names = c("SF", "Ala", "Sac", "S.Mateo", "C.Costa", "Kern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.3[13,], post.deaths.3[14,], post.deaths.3[15,], 
        post.deaths.3[16,], post.deaths.3[17,], post.deaths.3[18,], 
        horizontal = TRUE, las = 2,
        main = "Model 2: Est. Posterior Deaths", 
        names = c("Ventura", "S.Joaq", "SB", "Tulare", "Fresno", "Marin"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.3[19,], post.deaths.3[20,], post.deaths.3[21,], 
        post.deaths.3[22,], post.deaths.3[23,], post.deaths.3[24,], 
        horizontal = TRUE, las = 2,
        main = "Model 2: Est. Posterior Deaths", 
        names = c("Sonoma", "Stan.", "Solano", "Placer", "SLO", "Yolo"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.3[25,], post.deaths.3[26,], post.deaths.3[27,], 
        post.deaths.3[28,], post.deaths.3[29,], post.deaths.3[30,], 
        horizontal = TRUE, las = 2,
        main = "Model 2: Est. Posterior Deaths", 
        names = c("Imp", "SCZ", "Mont", "Merced", "Humboldt", "S.Benito"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(post.deaths.3[31,], post.deaths.3[32,], post.deaths.3[33,], 
        post.deaths.3[34,], post.deaths.3[35,], post.deaths.3[36,], 
        horizontal = TRUE, las = 2,
        main = "Model 2: Est. Posterior Deaths", 
        names = c("Dorado", "Napa", "Nevada", "Madera", "Shasta", "Mono"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

par(mfrow = c(2,2))
boxplot(est.posterior.deaths[1,], est.posterior.deaths[2,], est.posterior.deaths[3,], 
        est.posterior.deaths[4,], est.posterior.deaths[5,], est.posterior.deaths[6,], 
        main = "Model 1: Est. Posterior Deaths", horizontal = TRUE, las = 2,
        names = c("LA", "SD", "R.side", "S.Clara", "Orange", "S.Bern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(est.posterior.deaths[7,], est.posterior.deaths[8,], est.posterior.deaths[9,], 
        est.posterior.deaths[10,], est.posterior.deaths[11,], est.posterior.deaths[12,], 
        horizontal = TRUE, las = 2,
        main = "Model 1: Est. Posterior Deaths", 
        names = c("SF", "Ala", "Sac", "S.Mateo", "C.Costa", "Kern"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(est.posterior.deaths[13,], est.posterior.deaths[14,], est.posterior.deaths[15,], 
        est.posterior.deaths[16,], est.posterior.deaths[17,], est.posterior.deaths[18,], 
        horizontal = TRUE, las = 2,
        main = "Model 1: Est. Posterior Deaths", 
        names = c("Ventura", "S.Joaq", "SB", "Tulare", "Fresno", "Marin"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(est.posterior.deaths[19,], est.posterior.deaths[20,], est.posterior.deaths[21,], 
        est.posterior.deaths[22,], est.posterior.deaths[23,], est.posterior.deaths[24,], 
        horizontal = TRUE, las = 2,
        main = "Model 1: Est. Posterior Deaths", 
        names = c("Sonoma", "Stan.", "Solano", "Placer", "SLO", "Yolo"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(est.posterior.deaths[25,], est.posterior.deaths[26,], est.posterior.deaths[27,], 
        est.posterior.deaths[28,], est.posterior.deaths[29,], est.posterior.deaths[30,], 
        horizontal = TRUE, las = 2,
        main = "Model 1: Est. Posterior Deaths", 
        names = c("Imp", "SCZ", "Mont", "Merced", "Humboldt", "S.Benito"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

boxplot(est.posterior.deaths[31,], est.posterior.deaths[32,], est.posterior.deaths[33,], 
        est.posterior.deaths[34,], est.posterior.deaths[35,], est.posterior.deaths[36,], 
        horizontal = TRUE, las = 2,
        main = "Model 1: Est. Posterior Deaths", 
        names = c("Dorado", "Napa", "Nevada", "Madera", "Shasta", "Mono"), 
        col = c("blue", "darkblue", "brown", "red", "gold", "lightblue"))

